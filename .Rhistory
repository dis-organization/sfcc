usethis::use_rcpp()
usethis::use_package_doc()
devtools::load_all(".")
remove.packages("Rcpp")
library(Rcpp)
tools::package_native_routine_registration_skeleton("../sfcc", "src/init.c",character_only = FALSE)
library(sfcc)
library(sfcc)
library(sfcc)
library(sf)
library(sf)
library(sp)
N <- 1000000
df <- data.frame(lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
df_sf <- st_as_sf(df, coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84")
ptvec <- structure(c(0, 0), class = c("XY", "POINT", "sfg"))
ptvecfun <- function(pt) {
ptvec[1:2] <- pt
ptvec
}
N <- 1e5
df <- data.frame(lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
system.time({
df_sf <- st_as_sf(df, coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84")
})
ptvec <- structure(c(0, 0), class = c("XY", "POINT", "sfg"))
ptvecfun <- function(pt) {
ptvec[1:2] <- pt
ptvec
}
system.time({
l <- split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2))
lapply(l, ptvecfun)
})
length(l)
x <- sfcc::points_cpp(l)
system.time({
x <- sfcc::points_cpp(l)
})
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
system.time({
df_sf <- st_as_sf(df, coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84")
})
ptvec <- structure(c(0, 0), class = c("XY", "POINT", "sfg"))
ptvecfun <- function(pt) {
ptvec[1:2] <- pt
ptvec
}
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
system.time({
df_sf <- st_as_sf(df, coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84")
})
ptvec <- structure(c(0, 0), class = c("XY", "POINT", "sfg"))
ptvecfun <- function(pt) {
ptvec[1:2] <- pt
ptvec
}
system.time({
dt <- tibble::tibble(a = df$a)
dt[["geometry"]] <- st_sfc(
lapply(split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2)),
ptvecfun))
})
system.time({
x <- sfcc::points_cpp(l)
})
system.time({
dcc <- dt
dt[["geometry"]] <- st_sfc(sfcc::points_cpp(l))
})
dcc <- st_sfc(sfcc::points_cpp(l))
dcc <- sfcc::points_cpp(l)
dcc[1]
dcc[[1]]
str(dcc)
structure
library(sfcc)
library(sf)
library(sf)
library(sp)
N <- 1e6
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
dcc <- sfcc::points_cpp(cbind(df[["lng"]], df[["lat"]]))
dcc[1]
dcc[[1]]
dcc[[2]]
system.time({
dcc <- tibble::tibble(a = df$a)
dcc[["geometry"]] <- sfcc::points_cpp(cbind(df[["lng"]], df[["lat"]]))
})
ds <- st_sfc(dcc[["geometry"]])
attributes(ds)
g <- sfcc::points_cpp(cbind(df[["lng"]], df[["lat"]]))
class(g) <- c("sfc_POINT", "sfc")
attr(g, "precision")
attr(g, "precision") <- 0
st_bbox(st_point(1, 1))
st_bbox(st_point(c(1, 1)))
st_bbox(st_point(c(1, 1))) %>% str()
attr(g, "bbox") <- structure(c(xmin = min(df[["lng"]]), ymin = min(df[["lat"]]),
xmax = max(df[["lng"]]), ymax = max(df[["lat"]])),
class = "bbox")
attr(g, "crs") <- structure(list(proj4string = NA_character_, epsg = NA_integer), class = "crs")
attr(g, "crs") <- structure(list(proj4string = NA_character_, epsg = NA_integer_), class = "crs")
attr(g, "n_empty") <- 0
dcc[["geometry"]] <- g
system.time({
dcc <- tibble::tibble(a = df$a)
g <- sfcc::points_cpp(cbind(df[["lng"]], df[["lat"]]))
class(g) <- c("sfc_POINT", "sfc")
attr(g, "precision") <- 0
attr(g, "bbox") <- structure(c(xmin = min(df[["lng"]]), ymin = min(df[["lat"]]),
xmax = max(df[["lng"]]), ymax = max(df[["lat"]])),
class = "bbox")
attr(g, "crs") <- structure(list(proj4string = NA_character_, epsg = NA_integer_), class = "crs")
attr(g, "n_empty") <- 0
dcc[["geometry"]] <- g
})
st_sfc
tools::package_native_routine_registration_skeleton("../sfcc", "src/init.c",character_only = FALSE)
tools::package_native_routine_registration_skeleton("../sfcc", "src/init.c",character_only = FALSE)
tools::package_native_routine_registration_skeleton("../sfcc", "src/init.c",character_only = FALSE)
tools::package_native_routine_registration_skeleton("../sfcc", "src/init.c",character_only = FALSE)
N <- 1e5
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
system.time({
df_sf <- st_as_sf(df, coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84")
})
library(sf)
system.time({
df_sf <- st_as_sf(df, coords = c("lng", "lat"), crs = "+proj=longlat +datum=WGS84")
})
ptvec <- structure(c(0, 0), class = c("XY", "POINT", "sfg"))
ptvecfun <- function(pt) {
ptvec[1:2] <- pt
ptvec
}
l <- split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2))
system.time({
l <- split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2))
dt <- tibble::tibble(a = df$a)
dt[["geometry"]] <- lapply(l, ptvecfun)
})
system.time({
l <- split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2))
dt <- tibble::tibble(a = df$a)
dt[["geometry"]] <- lapply(l, ptvecfun)
dt <- st_as_sf(df, crs = "+proj=longlat +datum=WGS84")
})
dt[["geometry"]] <- st_as_sfc(lapply(l, ptvecfun))
system.time({
l <- split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2))
dt <- tibble::tibble(a = df$a)
dt[["geometry"]] <- st_as_sfc(lapply(l, ptvecfun))
dt <- st_as_sf(df, crs = "+proj=longlat +datum=WGS84")
})
system.time({
l <- split(t(cbind(df[["lng"]], df[["lat"]])), rep(seq_len(nrow(df)), each = 2))
dt <- tibble::tibble(a = df$a)
dt[["geometry"]] <- st_as_sfc(lapply(l, ptvecfun))
dt <- st_as_sf(dt, crs = "+proj=longlat +datum=WGS84")
})
usethis::use_readme_rmd()
devtools::load_all(".")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
N <- 1e6
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
m <- cbind(df$lng, df$lat)
library(rbenchmark)
library(sfcc)
benchmark(
sfcc_pt =  mk_sfc_POINT(m, crs = 4326),
sf_pt = st_as_sf(df, coords = c("lng", "lat"))
,replications = 2
)
N <- 1e5
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
m <- cbind(df$lng, df$lat)
library(rbenchmark)
library(sfcc)
benchmark(
sfcc_pt =  st_sf(geometry = mk_sfc_POINT(m, crs = 4326), a = df$a),
sf_pt = st_as_sf(df, coords = c("lng", "lat"))
,replications = 2
)
N <- 1e6
df <- data.frame(a = sample(letters, N, replace = TRUE),
lng = runif(N, -120, -100),
lat = runif(N, 30, 48))
m <- cbind(df$lng, df$lat)
library(rbenchmark)
library(sfcc)
benchmark(
sfcc_pt =  st_sf(geometry = mk_sfc_POINT(m, crs = 4326), a = df$a),
sf_pt = st_as_sf(df, coords = c("lng", "lat"))
,replications = 2
)
setwd("~")
system("tar zxvf ncdf4_1.16.tar.gz")
